apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: 5C-Testing-Cluster-Upgrade
  region: ap-south-1
  version: "1.23"

vpc:
  subnets:
    public:
      DevOpsTraining-Pub-1a:
        id: "subnet-04fa5c7c2feaebe57"
      DevOpsTraining-Pub-1b:
        id: "subnet-0b87911dec0e93688"
      DevOpsTraining-Pub-1c:
        id: "subnet-0e72c1d3a930e2a12"
    private:
      DevOpsTraining-Pvt-1a:
        id: "subnet-03a8e084dc150844d"
      DevOpsTraining-Pvt-1b:
        id: "subnet-06a418be591a2cbc1"
      DevOpsTraining-Pvt-1c:
        id: "subnet-07770e23a24cef0b2"
managedNodeGroups:
- name: 5C-Testing-Cluster-NG-1
  ami: ami-0177426bcf59f2825
  amiFamily: AmazonLinux2
  overrideBootstrapCommand: |
    #!/bin/bash
    /etc/eks/bootstrap.sh 5C-Testing-Cluster-Upgrade --container-runtime containerd
  minSize: 1
  maxSize: 1
  desiredCapacity: 1
  instanceTypes: ["t3a.large", "m5a.large", "t3.large", "m5.large"]
  spot: true
  volumeSize: 30
  volumeEncrypted: true
  privateNetworking: true
  subnets:
  - DevOpsTraining-Pvt-1a
  - DevOpsTraining-Pvt-1b
  - DevOpsTraining-Pvt-1c
  labels: {role: Demo}
  ssh:
    publicKeyName: DevOps-Training
  tags:
    nodegroup-role: DevOps-Training-Demo
    nodegroup-name: DevOps-Training-Demo
    Project: DevOps-Training
  iam:
    attachPolicyARNs:
    - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
    - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
    - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
    withAddonPolicies:
      autoScaler: true
      externalDNS: true
      certManager: true
      ebs: true
      efs: true
      albIngress: true
      cloudWatch: true
